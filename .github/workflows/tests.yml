name: Integration Tests

on: issue_comment

jobs:
  pr_commented:
    name: PR comment
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'Run Integration Tests') }}
    runs-on: ubuntu-latest
    steps:
      - name: Obtain branch name
        id: obtain-branch-name
        run: |
          echo "Obtaining branch name from pull request URL..."

          # Extract the pull request URL from the event information
          pull_request_url=${{ github.event.issue.pull_request.url }}

          # Make an API request to the pull request URL
          response=$(curl -s $pull_request_url)

          # Extract the branch name from the API response
          branch_name=$(echo $response | jq -r '.head.ref')
          owner=$(echo $response | jq -r '.user.login')
          repo=$(echo $response | jq -r '.head.repo.name')
          sha=$(echo $response | jq -r '.head.sha')

          echo "::set-output name=branch_name::$branch_name"
          echo "::set-output name=owner::$owner"
          echo "::set-output name=repo::$repo"
          echo "::set-output name=sha::$sha"


    
      - name: Setup | Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.obtain-branch-name.outputs.branch_name }}
            
      - name: Print the branch name
        run: echo "${{ steps.obtain-branch-name.outputs.branch_name }}"
      
      - uses: pnpm/action-setup@v2
        with:
          version: 7.22.0
      
      - name: Install pnpm dependencies
        run: pnpm install
    
      - name: Build contracts
        run: "pnpm hardhat compile"
      
      - name: Run node
        run: "pnpm hardhat node &"

      - name: Setup | Rust
        uses: ATiltedTree/setup-rust@v1
        with:
          rust-version: stable

      - name: Run tests
        run: cargo test
      
      - name: Create a commit status
        run: |
          url=https://api.github.com/repos/${{ steps.obtain-branch-name.outputs.owner }}/${{ steps.obtain-branch-name.outputs.repo }}/statuses/${{ steps.obtain-branch-name.outputs.sha }} \
          response=$(curl \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: 2022-11-28" \
            $url \
            -d '{"state":"success"}')
          echo "$response"


